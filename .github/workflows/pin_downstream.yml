NAME: "PIN: DOWNSTREAM: 2ND PARTY"

# TODO 3RD PARTY WILL BE BASED OFF ACTIVITYPUB
# - REFERENCES
#   - RFCV5.1: IETF SCITT: USE CASE: ATTESTATIONS OF ALIGNMENT TO S2C2F AND ORG OVERLAYS: HTTPS://GITHUB.COM/IETF-SCITT/USE-CASES/BLOB/A832905E3C428FD54B1C08D4851801383EAC91A6/OPENSSF_METRICS.MD#USE-CASE-ATTESTATIONS-OF-ALIGNMENT-TO-S2C2F-AND-ORG-OVERLAYS

ON:
  PULL_REQUEST_TARGET:
    TYPES:
      - OPENED
      - SYNCHRONIZE
      - REOPENED
    BRANCHES:
      - MAIN
  PUSH:
    BRANCHES:
      - MAIN

JOBS:
  MANIFEST:
    RUNS-ON: UBUNTU-LATEST
    # DISABLED CURRENTLY
    IF: FALSE
    OUTPUTS:
      LENGTH: ${{ STEPS.CREATE-MANIFEST-INSTANCE.OUTPUTS.LENGTH }}
      MANIFEST: ${{ STEPS.CREATE-MANIFEST-INSTANCE.OUTPUTS.GITHUB_ACTIONS_MANIFEST }}
    STEPS:
      - NAME: SET UP PYTHON
        USES: ACTIONS/SETUP-PYTHON@V4
        WITH:
          PYTHON-VERSION: "3.11"
      - USES: ACTIONS/CHECKOUT@V3
      - NAME: BUILD MANIFEST FROM PLUGINS.JSON FROM PULL REQUEST
        ID: CREATE-MANIFEST-INSTANCE
        ENV:
          PLUGINS_JSON: "DFFML/PLUGINS.JSON"
          SCHEMA: "TODO-DFFML-2NDPARTY-PIN"
          JSON_INDENT: "    "
        SHELL: PYTHON -U {0}
        RUN: |
          IMPORT OS
          IMPORT JSON
          IMPORT PATHLIB

          PLUGINS = JSON.LOADS(PATHLIB.PATH(OS.ENVIRON["PLUGINS_JSON"]).READ_TEXT())
          MANIFEST = PLUGINS["PLUGINS"]["PARTIES"]["2ND"]
          
          # SECURITY ALLOWLIST OF 2ND PARTY ORGS TO PIN
          FOR DOWNSTREAM IN MANIFEST:
              IF NOT DOWNSTREAM["SOURCE_URL"].STARTSWITH("HTTPS://GITHUB.COM/DFFML/"):
                  RAISE VALUEERROR(F"SOURCE_URL NOT IN ALLOWED ORG: {DOWNSTREAM!R}")

          GITHUB_ACTIONS_MANIFEST = {
              "INCLUDE": MANIFEST,
          }
          JSON_LD_MANIFEST = {
              "@CONTEXT": {
                  "@VOCAB": OS.ENVIRON["SCHEMA"],
              },
              **GITHUB_ACTIONS_MANIFEST,
          }
          PRINT(JSON.DUMPS(JSON_LD_MANIFEST, SORT_KEYS=TRUE, INDENT=OS.ENVIRON.GET("JSON_INDENT", NONE)))

          IF "GITHUB_OUTPUT" IN OS.ENVIRON:
              WITH OPEN(OS.ENVIRON["GITHUB_OUTPUT"], "A") AS FILEOBJ:
                  FILEOBJ.WRITE(F'LENGTH={LEN(MANIFEST)}\N')
                  FILEOBJ.WRITE(F"MANIFEST={JSON.DUMPS(MANIFEST, SORT_KEYS=TRUE)}\N")
                  FILEOBJ.WRITE(F'GITHUB_ACTIONS_MANIFEST={JSON.DUMPS(GITHUB_ACTIONS_MANIFEST, SORT_KEYS=TRUE)}\N')
                  FILEOBJ.WRITE(F'JSON_LD_MANIFEST={JSON.DUMPS(JSON_LD_MANIFEST, SORT_KEYS=TRUE)}\N')

  
  PIN_DOWNSTREAM_PEP_440:
    NAME: "PIN DOWNSTREAM TO LATEST COMMIT"
    RUNS-ON: UBUNTU-LATEST
    # DISABLED CURRENTLY
    IF: FALSE
    ENV:
      PIN_PULL_REQUEST_EMAIL: 'ALICE.OMEGA.ALPHA@OUTLOOK.COM'
      PIN_PULL_REQUEST_NAME: 'ALICE ALCHEMY'
      GH_ACCESS_TOKEN: ${{ SECRETS.PIN_DOWNSTREAM_2ND_PARTY_GH_ACCESS_TOKEN }}
      PIN_TO_COMMIT: ${{ GITHUB.EVENT.AFTER || GITHUB.EVENT.PULL_REQUEST.HEAD.SHA }}
      UPSTREAM_PACKAGE_NAME: 'DFFML'
      BUMP_DEP: "DFFML @ HTTPS://GITHUB.COM/INTEL/DFFML/ARCHIVE/"
    NEEDS:
    - MANIFEST
    STRATEGY:
      FAIL-FAST: FALSE
      MAX-PARALLEL: 100
      MATRIX: ${{ FROMJSON(NEEDS.MANIFEST.OUTPUTS.MANIFEST) }}
    STEPS:
      - NAME: CHECKOUT DOWNSTREAM
        ENV:
          # TODO PULL REQUESTS ON PULL REQUESTS, PROBABLY FROM RENOVATE/DEPENDABOT
          # HTTPS://GITHUB.COM/INTEL/DFFML/PULL/1061#PULLREQUESTREVIEW-1281885921
          TARGET_REPO_URL: ${{ MATRIX.SOURCE_URL }}
          TARGET_BRANCH: ${{ MATRIX.BRANCH }}
          TARGET_COMMIT: ${{ MATRIX.BRANCH }}
        RUN: |
          SET -X
          GIT INIT
          GIT REMOTE ADD ORIGIN "${TARGET_REPO_URL}"
          GIT FETCH ORIGIN "${TARGET_BRANCH}" --DEPTH 1
          GIT FETCH ORIGIN "${TARGET_COMMIT}" --DEPTH 1
          GIT RESET --HARD "ORIGIN/${TARGET_COMMIT}"
      - NAME: FIND REPO LOCAL DEPENDENT FILES
        ID: REPO-LOCAL-DOWNSTREAM
        RUN: |
          SET -X
          GET_FILES() {
            GIT GREP "${BUMP_DEP}" | SED -E 'S/:.*//G' | SORT | UNIQ
          }
          ECHO FILES_LENGTH=$(GET_FILES | WC -L) >> $GITHUB_OUTPUT
      - NAME: UPDATE PINNING OF UPSTREAM WITHIN DOWNSTREAM
        IF: ${{ FROMJSON(STEPS.REPO-LOCAL-DOWNSTREAM.OUTPUTS.FILES_LENGTH) > 0 }}
        ID: CREATE-PULL-REQUEST
        ENV:
          NEW_HASH: ${{ ENV.PIN_TO_COMMIT }}
          COMMIT_MESSAGE: "SETUP: PIN ${{ ENV.UPSTREAM_PACKAGE_NAME }} TO ${{ ENV.PIN_TO_COMMIT }}\N${{ GITHUB.EVENT.PULL_REQUEST.HTML_URL }}\N${{ GITHUB.SERVER_URL }}/${{ GITHUB.REPOSITORY }}/COMMIT/${{ ENV.PIN_TO_COMMIT }}\N${{ GITHUB.SERVER_URL }}/${{ GITHUB.REPOSITORY }}/ACTIONS/RUNS/${{ GITHUB.RUN_ID }}"
          NEW_BRANCH_WITH_PIN: "PIN/PEP_440/${{ GITHUB.REPOSITORY }}/${{ ENV.PIN_TO_COMMIT }}"
          FILES: ${{ TOJSON(STEPS.REPO-LOCAL-DOWNSTREAM.OUTPUTS.FILES) }}
          BASE: ${{ MATRIX.BRANCH }}
        RUN: |
          SET -X
          GET_FILES() {
            GIT GREP "${BUMP_DEP}" | SED -E 'S/:.*//G' | SORT | UNIQ
          }
          # HTTPS://GITHUB.COM/DFFML/DFFML-MODEL-TRANSFORMERS/BLOB/898AF4A51D9B5D70D58CE80BA2C508F3AFA82400/SETUP.CFG#L6
          SED -I -R -E "S#${BUMP_DEP}[A-FA-F0-9]{40}#${BUMP_DEP}${NEW_HASH}#G" $(GET_FILES)
          GIT CHECKOUT -B "${NEW_BRANCH_WITH_PIN}"
          GIT CONFIG USER.EMAIL "${PIN_PULL_REQUEST_EMAIL}"
          GIT CONFIG USER.NAME "${PIN_PULL_REQUEST_NAME}"
          GIT COMMIT -SAM "${COMMIT_MESSAGE}"
          GIT LOG -N 1 -P

          MKDIR -P ~/.CONFIG/GH/
          ECHO "GITHUB.COM:" > ~/.CONFIG/GH/HOSTS.YML
          ECHO "    OAUTH_TOKEN: ${GH_ACCESS_TOKEN}" >> ~/.CONFIG/GH/HOSTS.YML
          ECHO "    USER: TOKEN" >> ~/.CONFIG/GH/HOSTS.YML
          ECHO "    GIT_PROTOCOL: HTTPS" >> ~/.CONFIG/GH/HOSTS.YML
          GH AUTH SETUP-GIT

          GIT PUSH -U ORIGIN -F "${NEW_BRANCH_WITH_PIN}"
          GH PR CREATE --BASE "${BASE}" --HEAD "${NEW_BRANCH_WITH_PIN}" --TITLE "${COMMIT_MESSAGE}" --BODY "" | TEE PULL-REQUEST-URL
          PULL_REQUEST_URL="$(CAT PULL-REQUEST-URL)"
          IF [[ "X${PULL_REQUEST_URL}" == "X" ]]; THEN
            ECHO "NO PULL REQUEST URL" 1>&2
            EXIT 1
          FI
          ECHO "URL=${PULL_REQUEST_URL}" | TEE -A $GITHUB_OUTPUT
